pipeline {
    agent any

    environment {
        TOMCAT_SERVER = '10.0.11.178'
        PROXY_SERVER  = '10.0.40.132'
        SSH_CRED_ID   = 'Devops_MJ_cred'
        TOMCAT_PATH   = '/opt/tomcat/webapps'
        TOMCAT_SVC    = 'tomcat10'
        DEPLOY_TIMEOUT = 120  // in seconds
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Amogh902/DevOps_MJ_code.git'
            }
        }

        stage('Build WAR') {
            steps {
                sh 'mvn clean package'
            }
        }

        stage('Deploy to Tomcat') {
            steps {
                sshagent([SSH_CRED_ID]) {
                    sh """
                        WAR_FILE=\$(ls target/*.war | head -n1)
                        echo "WAR built: \$WAR_FILE"

                        # Copy WAR to Tomcat server
                        scp -o StrictHostKeyChecking=no \$WAR_FILE ec2-user@${TOMCAT_SERVER}:/tmp/ROOT.war

                        # Deploy WAR on Tomcat
                        ssh -o StrictHostKeyChecking=no ec2-user@${TOMCAT_SERVER} '
                            sudo systemctl stop ${TOMCAT_SVC} || true
                            sudo rm -rf ${TOMCAT_PATH}/ROOT ${TOMCAT_PATH}/ROOT.war
                            sudo mv /tmp/ROOT.war ${TOMCAT_PATH}/ROOT.war
                            sudo chown tomcat:tomcat ${TOMCAT_PATH}/ROOT.war
                            sudo chmod 644 ${TOMCAT_PATH}/ROOT.war
                            sudo systemctl restart ${TOMCAT_SVC}

                            # Wait for deployment to finish (with timeout)
                            echo "Waiting for ROOT.war to be deployed..."
                            TIMEOUT=${DEPLOY_TIMEOUT}
                            while [ \$TIMEOUT -gt 0 ]; do
                                if sudo grep -q "Deployment of web application archive ${TOMCAT_PATH}/ROOT.war has finished" /opt/tomcat/logs/catalina.out; then
                                    echo "Deployment finished."
                                    exit 0
                                fi
                                sleep 5
                                TIMEOUT=\$((TIMEOUT-5))
                            done

                            echo "ERROR: Deployment timed out after ${DEPLOY_TIMEOUT} seconds"
                            exit 1
                        '
                    """
                }
            }
        }

        stage('Verify via Proxy') {
            steps {
                sh """
                    HTTP_CODE=\$(curl -s -o /dev/null -w "%{http_code}" http://${PROXY_SERVER}/)
                    echo "HTTP code from proxy: \$HTTP_CODE"
                    if [ "\$HTTP_CODE" -ne 200 ]; then
                        echo "ERROR: App not reachable via proxy!"
                        exit 1
                    fi
                """
            }
        }
    }

    post {
        success {
            echo "✅ Deployment successful! Access the app via: http://${PROXY_SERVER}/"
        }
        failure {
            echo "❌ Deployment failed. Check Jenkins logs."
        }
    }
}
